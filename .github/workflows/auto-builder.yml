# This file is automatically generated

name: Auto Builder CI

on:
  workflow_dispatch:
  repository_dispatch:
  release:
    types:
      - released

jobs:
  alpine-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: vcxpz
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Github Login
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Check For Updates
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(curl -sL "http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz" | tar -xz -C /tmp && awk '/^P:redis$/,/V:/' /tmp/APKINDEX | sed -n 2p | sed 's/^V://')
          OLD_VERSION=$(curl -sL "https://api.github.com/repos/hydazz/docker-redis/releases/latest" | jq -r '.tag_name')
          printf '{
               "tag_name": "'${VERSION}'",
               "target_commitish": "'${main}'",
               "name": "'${VERSION}'",
               "body": "Upgrading Redis '${OLD_VERSION}' to '${VERSION}'",
               "draft": false,
               "prerelease": false
          }' >releasebody.json
          curl -H "Authorization: token ${TOKEN}" -X POST https://api.github.com/repos/hydazz/docker-redis/releases -d @releasebody.json
          rm releasebody.json

      - name: Build The Docker Image Locally
        run: |
          docker buildx build \
            --platform=amd64 \
            --output "type=docker" \
            --build-arg BUILD_DATE="$(date +%Y-%m-%d)" \
            --build-arg VERSION=$(curl -sL "https://api.github.com/repos/hydazz/docker-redis/releases/latest" | jq -r '.tag_name') \
            --tag vcxpz/ci-build:ci-build \
            --file Dockerfile .

      - name: Test The Docker Image
        run: |
          export TEST_SEARCH="Ready to accept connections"
          curl -sSL https://raw.githubusercontent.com/hydazz/docker-utils/main/docker/docker-ci.sh | bash

      - name: Build And Push The Docker Image
        run: |
          docker buildx build \
            --platform=linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=true" \
            --build-arg BUILD_DATE="$(date +%Y-%m-%d)" \
            --build-arg VERSION=$(curl -sL "https://api.github.com/repos/hydazz/docker-redis/releases/latest" | jq -r '.tag_name') \
            --tag vcxpz/redis:$(curl -sL "https://api.github.com/repos/hydazz/docker-redis/releases/latest" | jq -r '.tag_name') \
            --tag vcxpz/redis:latest \
            --file Dockerfile .

      - name: Get New Package Versions From Image
        run: |
          docker run --rm --entrypoint /bin/sh -v ${PWD}:/tmp vcxpz/ci-build:ci-build -c '\
            apk info -v | sort >/tmp/package_versions.txt'

      - name: Commit And Push Changes To Github
        run: |
          git add -A
          git commit -m "Bot Updating Files" || true
          git push || true

      - name: Sync README.md With Docker Hub
        uses: peter-evans/dockerhub-description@v2
        with:
          username: vcxpz
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: vcxpz/redis

